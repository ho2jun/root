https://www.miricanvas.com/v/12h5ijx

자바 1_CLASS

자바는 어디에 쓰이나요?

pc 애플리케이션,

1) 통합개발환경 프로글매 (이클립스/ 인텔리전스)

웹 애플리케이션
1)  jsp 스프링부트 스프링

모바일 애플리케이션
1) 안드로이드
2) 코틀린 (IOS 안드로이드 통합)

빅데이터
1) 하둡

게임 (마인크래프트)
과학기술 , 소형기기 등등

다양한 분야 활발하게 사용 프로그래머에 대한 강점이 많다
20년동안 언어 1등, 2등

객체지향 언어 (모던한 언어 / 쉽게 배울수있는장점)]


section02 변수

println : 줄바꿈이 있는 출력함수
print : 줄바꿈이 없는 출력함수
printf : 서식문자 출력함수
1) %d : 10진수 (숫자)
2) %f : 소수 (부동소수점 / 고정소수점)
3) %c : 문자 한개 
4) %s : 문자열
5) %b : 백스페이스
6) %n : 줄바꿈

서식문자 공백
1) %nd :  N자리에 숫자만큼 공백

서식문자 소수
1) %.nf : 소수가 n번째 자리수만큼 출력된다.

변수 선언과 저장 방법
1) 변수 : 데이터 타입(상자타임 : 과일/책/빵)
int char float boolean 메모리 공간을 만들어서 선언

ex)
int age = 25; // 정수타입 변수를 초기화 한다
char gender ="F"; // 캐릭터 타입 선언
float num = 3.14;

변수 타입 (기본형) 값의 타입에 의해 결정
1) 정수는 정수끼리
2) 소수는 소수끼리
3) 문자는 문자끼리
* 저장할 값의 타입과 일치하는 타입으로 변수 선언 
임시변수에 값을 복사할때도 데이터 타입이 일치한다


day 2

 @실수(소수) 표현방법

1. 고정 소수점
 고정된 소수점 위치를 가진다.
 소수점 이하의 숫자들은항상 일정한 자리수를 가진다.
123.15 -> (2개)

정수와 소수부분을 쉽게 나눌수 있다.
큰범위의 숫자를 표현하기 X

2. 부동 소수점(고정 x)
소수점의 위치가 고정되어 있지 않다.
가수부 - 지수부

 float :  8개 소수점 표현
 double : 11개 소수점 표현

3. 문자형 char = 2byte(숫자로 표현)
   아스키 코드/ 유니코드 = 변경해서 사용한다.
 1) 작은 따옴표로 묶어서 저장한다.
     char ch1 = "A"; X => 'A' -> 아스키 코드 65번 찾기
 2) 공백이 없는 따옴표는 에러난다.
     char ch1 = ' '; // 에러 공백X
 3) 문자 그대로 저장되는게 아니다 유니코드(2byte=65535문자)/ 아스키코드(128개1byte)로
    변환된다.
 4) 캐릭터는 한가지 문자로만 표현된다.

4. 기본 논리형 표현 (=boolean) = 1byte
   값의 범위는 : true / false
   boolean gender = true;

5. 참조 자료형
 1) 기본 자료형 (정수 : int long byte / 실수 : float double/문자 : char)과 참조 자료형
     * stack 메모리 공간을 할당 받아 저장한다.
 2) 참조 자료형 = 주소저장하는 방식 <- 메모리
     * heap영역이다.
     Strong / Date -> 문자열을 객체로 받아서 프린트
     String name = new String();
     name = "김빵빵";

6. 형 변환(= 자료형 자료형끼리 선언)X
   연산을 수행할때 마지막 연산값을 저장한다.
    float ft = 100; // 값을 저장하는거랑 자료형선언이랑 다르다.
    * 변수가 가진 자료형을 다른 자료형으로 변환하는 방식 (=형변환)
    
    @자동형변환
    서로 다른 자료형간의 대입이나 연산을 할 경우
    자바의 컴파일러가 자동으로 형변환을 생략할수 있다.
    * 자동으로 형변환 가능한 예시(데이터 손실이 없음)
     - 크기가 작은 자료형(short<int)에서 큰 자료형으로 변환할때
     - 정수형이 실수형으로 변환할때
    float ft = (int)100;
     - 정수형이 실수형으로 변환할때
    int num1 = 12345;
    double num2 = (int)num1; //100.0
     
    @강제형변환
    1. 큰 자료형의 변수를 작은 자료형으로 담아내는것이다.
    2. 데이터가 보존 될 수 있거나 손실이 발생되는 경우도 있다.
       자료형 변수명 = (강제로 변환할 자료형)
      int num1 = 10;
      byte num2 = (byte)num1;
      
      * 자동 형 변환(업캐스팅)
      * 강제 형 변환(다운 캐스팅)

    @데이터 입력
     // 자바 라이브러리 import
        import java.util.Scanner;
    // Scanner 객체 선언
        Scanner input = new Scanner(System.in);
    // 값을 입력 받기
        int input_num = intput.nextlnt();
    - 정수형
       byte nextByte() : 입력 받을 값을 byte형으로 변환
       short nextshort() : 입력 받을 값을 short형으로 변환
       int nextint() : 입력 받을 값을 int형으로 변환
       long nextlong() : 입력 받을 값을 long형으로 변환

    - 실수형
       float nextFloat() : 입력 받을 값을 float로 변환
       double nextDouble : 입력 받을 밧을 Double로 변환

    - 문자형
       String nextLine() : 입력받은 전체의 문자열 타입을 엔터로 구분
       String next() : 입력 받은 값을 문자열으로 반환 (띄어쓰기)   
  
    



 
